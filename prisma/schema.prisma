// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = []
}

model Redirect {
  id          Int       @id @default(autoincrement())
  shopDomain  String    @db.VarChar @map("shop_domain")
  fromPath    String    @db.VarChar @map("from_path")
  toPath      String    @db.VarChar @map("to_path")
  shopifyId   String    @db.VarChar @map("shopify_id")
  isActive    Boolean   @default(true) @map("is_active")
  isWildcard  Boolean   @default(false) @map("is_wildcard")
  pattern     String?   @db.VarChar @map("pattern")
  createdAt   DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt   DateTime  @updatedAt @db.Timestamp @map("updated_at")

  @@unique([shopDomain, fromPath, pattern])
  @@index([shopDomain, fromPath, pattern])
  @@map("redirects")
}

model NotFoundError {
  id          Int       @id @default(autoincrement())
  shopDomain  String    @db.VarChar @map("shop_domain")
  path        String    @db.VarChar
  userAgent   String?   @db.VarChar @map("user_agent")
  referer     String?   @db.VarChar
  timestamp   DateTime  @default(now()) @db.Timestamp
  redirected  Boolean   @default(false)
  redirectTo  String?   @db.VarChar @map("redirect_to")

  @@index([shopDomain, timestamp])
  @@map("not_found_errors")
}

model NotificationSettings {
  id          Int       @id @default(autoincrement())
  shopDomain  String    @db.VarChar @map("shop_domain")
  email       String    @db.VarChar
  frequency   String    @db.VarChar  // daily, weekly, monthly
  enabled     Boolean   @default(true)
  lastSentAt  DateTime? @db.Timestamp @map("last_sent_at")
  createdAt   DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt   DateTime  @updatedAt @db.Timestamp @map("updated_at")

  @@unique([shopDomain, email])
  @@map("notification_settings")
}

model SupportTicket {
  id          Int       @id @default(autoincrement())
  shopDomain  String    @db.VarChar @map("shop_domain")
  name        String    @db.VarChar
  email       String    @db.VarChar
  question    String    @db.Text
  status      String    @db.VarChar @default("open")  // open, answered, closed
  createdAt   DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt   DateTime  @updatedAt @db.Timestamp @map("updated_at")

  @@index([shopDomain, status])
  @@map("support_tickets")
}

model ShopifySession {
  id              String    @id @db.VarChar(255)
  shop            String    @db.VarChar(255)
  state           String    @db.VarChar(255)
  isOnline        Boolean
  scope           String?   @db.VarChar(255)
  expires         DateTime?
  accessToken     String?   @db.VarChar(255)
  onlineAccessInfo Json?

  @@index([shop])
  @@map("shopify_sessions")
}

model ThemeStatus {
  id          String   @id @default(cuid())
  shopDomain  String
  themeId     String
  isActive    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([shopDomain, themeId])
  @@map("theme_statuses")
}

model AutoFixSettings {
  id          Int       @id @default(autoincrement())
  shopDomain  String    @unique @db.VarChar @map("shop_domain")
  enabled     Boolean   @default(false)
  toPath      String    @db.VarChar @map("to_path")
  createdAt   DateTime  @default(now()) @db.Timestamp @map("created_at")
  updatedAt   DateTime  @updatedAt @db.Timestamp @map("updated_at")

  @@map("auto_fix_settings")
}
